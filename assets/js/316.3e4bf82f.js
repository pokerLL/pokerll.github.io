(window.webpackJsonp=window.webpackJsonp||[]).push([[316],{595:function(t,a,s){"use strict";s.r(a);var r=s(14),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"pyenv-多版本python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pyenv-多版本python"}},[t._v("#")]),t._v(" pyenv：多版本python")]),t._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("ul",[a("li",[t._v("pyenv是一个Python版本的管理工具，可以很方便的全局切换Python版本，也可以给单个项目提供对应的Python版本")])]),t._v(" "),a("p",[t._v("‍")]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("git clone https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("yyuu"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pyenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pyenv\n")])])]),a("p",[a("strong",[t._v("配置环境变量")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bashrc\necho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#### PYENV ####'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bashrc\necho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export PYENV_ROOT=\"$HOME/.pyenv\"'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bashrc\necho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export PATH=\"$PYENV_ROOT/bin:$PATH\"'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bashrc\necho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eval \"$(pyenv init -)\"'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bashrc\necho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#### PYENV ####'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bashrc\necho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bashrc\nsource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bashrc\n")])])]),a("p",[t._v("‍")]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("h3",{attrs:{id:"安装python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装python"}},[t._v("#")]),t._v(" 安装python")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ pyenv install --list //查看可安装的python版本\n$ pyenv install -v <version> //安装python\n")])])]),a("h3",{attrs:{id:"更新pyenv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新pyenv"}},[t._v("#")]),t._v(" 更新pyenv")]),t._v(" "),a("blockquote",[a("p",[t._v("安装完成以后，需要更新一下才能看到已安装的版本")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ pyenv rehash  \n$ pyenv versions //查看已经安装好的版本，带*号的为当前使用的版本\n")])])]),a("h3",{attrs:{id:"解决国内安装python下载慢的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决国内安装python下载慢的问题"}},[t._v("#")]),t._v(" 解决国内安装python下载慢的问题")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("将下载好的相应的python安装包,例如Python-3.6.1.tgz  放在\n~/.pyenv/cache下，并且重命名为Python-3.6.1.tar.gz\n\n然后执行pyenv install 3.6.1\n")])])]),a("h3",{attrs:{id:"选择已安装的python版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择已安装的python版本"}},[t._v("#")]),t._v(" 选择已安装的python版本")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ pyenv global 3.6.1 //设置全局版本，即系统使用的将是此版本  \n$ pyenv local 3.6.1 //当前目录下的使用版本，有点类似virtualenv\n")])])]),a("p",[t._v("要切换python版本，可以用"),a("code",[t._v("pyenv global/local <version>")]),t._v("​。运行global命令会切换全局的python版本；而local命令则会在当前目录下创建.python_version。")]),t._v(" "),a("p",[t._v("一般的，我们不修改全局版本，而使用期默认值system，因为在unix系统上，很多系统工具依赖于Python，如果我们修改了Python的版本，会造成绝大多数的依赖Python的系统工具无法使用，如果你不小心修改了，也不要紧张，使用global命令修改回来就可以了，有时候，你发现部分系统工具无法使用，你也可以看看你当前的Python版本。")]),t._v(" "),a("p",[t._v("‍")]),t._v(" "),a("h2",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),a("h3",{attrs:{id:"mac安装python失败"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mac安装python失败"}},[t._v("#")]),t._v(" mac安装python失败")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("brew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CC")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/homebrew/bin/gcc-11 pyenv "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.8")]),t._v(".12\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);