(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{390:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"line-profiler-逐行profile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#line-profiler-逐行profile"}},[a._v("#")]),a._v(" line_profiler - 逐行profile")]),a._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),t("p",[a._v("​"),t("code",[a._v("line_profiler")]),a._v("​ 是一个 Python 库，用于分析 Python 代码的性能，并以逐行方式显示代码的执行时间。它可以帮助你找出代码中哪些部分消耗了大量时间，从而优化代码。")]),a._v(" "),t("p",[a._v("以下是 "),t("code",[a._v("line_profiler")]),a._v("​ 库的基本使用方法：")]),a._v(" "),t("h2",{attrs:{id:"安装-line-profiler​"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-line-profiler​"}},[a._v("#")]),a._v(" 安装 "),t("code",[a._v("line_profiler")]),a._v("​")]),a._v(" "),t("p",[a._v("确保已经安装了 "),t("code",[a._v("line_profiler")]),a._v("​ 库。可以通过 "),t("code",[a._v("pip")]),a._v("​ 进行安装：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("pip "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" line_profiler\n")])])]),t("h2",{attrs:{id:"使用-line-profiler​"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-line-profiler​"}},[a._v("#")]),a._v(" 使用 "),t("code",[a._v("line_profiler")]),a._v("​")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[a._v("在代码中添加装饰器")])]),a._v(" "),t("p",[a._v("在你想要分析性能的函数上使用 "),t("code",[a._v("@profile")]),a._v("​ 装饰器。")]),a._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 示例函数")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[a._v("@profile")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("your_function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 你要测试性能的代码")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("pass")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("**运行 "),t("strong",[a._v("​")]),t("code",[a._v("kernprof")]),t("strong",[a._v("​ ** 命令行工具")])]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("kernprof")]),a._v("​ 命令行工具运行你的 Python 脚本，并生成性能分析数据。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kernprof "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" your_script.py\n")])])]),t("p",[a._v("这将运行 "),t("code",[a._v("your_script.py")]),a._v("​ 文件，并在执行完毕后生成性能分析结果。")]),a._v(" "),t("p",[a._v("​"),t("code",[a._v("-l")]),a._v("​ 标志用于告诉 "),t("code",[a._v("kernprof")]),a._v("​ 监视代码中的装饰器 "),t("code",[a._v("@profile")]),a._v("​。")]),a._v(" "),t("p",[a._v("​"),t("code",[a._v("-v")]),a._v("​ 标志用于在分析结束后显示结果。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("分析结果")])]),a._v(" "),t("p",[a._v("执行完命令后，将会显示代码各行的执行时间。这样可以知道哪些行消耗了更多的时间。")])])]),a._v(" "),t("h2",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[a._v("#")]),a._v(" 示例")]),a._v(" "),t("p",[a._v("假设有以下脚本 "),t("code",[a._v("example.py")]),a._v("​：")]),a._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# example.py")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[a._v("@profile")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("my_function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    total "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        total "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" i\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" total\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" __name__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'__main__'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    my_function"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("然后，在命令行中运行：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kernprof "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" example.py\n")])])]),t("p",[a._v("执行完毕后，会显示出每行代码的执行时间统计结果。")]),a._v(" "),t("p",[a._v("或者使用命令查看统计结果：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("python "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" line_profiler example.py.lprof\n")])])]),t("p",[a._v("注意：在实际的项目中，为了提高分析结果的准确性，可以考虑在测试代码时避免对 I/O 操作的测试，因为 I/O 操作的时间开销可能会与代码的实际执行时间相混淆。")]),a._v(" "),t("p",[a._v("希望这能帮助你了解如何使用 "),t("code",[a._v("line_profiler")]),a._v("​ 这个 Python 库进行代码性能分析。")])])}),[],!1,null,null,null);t.default=r.exports}}]);