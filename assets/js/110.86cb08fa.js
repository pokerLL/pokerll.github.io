(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{388:function(t,a,e){"use strict";e.r(a);var s=e(14),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"coverage-单测覆盖率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coverage-单测覆盖率"}},[t._v("#")]),t._v(" coverage-单测覆盖率")]),t._v(" "),a("h2",{attrs:{id:"_1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1"}},[t._v("#")]),t._v(" 1")]),t._v(" "),a("p",[t._v("两步：1 生成覆盖率 2 展示覆盖率")]),t._v(" "),a("p",[t._v("使用")]),t._v(" "),a("p",[t._v("coverage run")]),t._v(" "),a("p",[t._v("--source")]),t._v(" "),a("p",[t._v("--omit")]),t._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("coverage用于检测单元测试覆盖率，分为API和可执行文件两种使用方式。")]),t._v(" "),a("p",[t._v("一些指明动作的参数：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("run \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行一个python程序并收集运行数据")]),t._v("\nreport \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成报告")]),t._v("\nhtml \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把结果输出html格式")]),t._v("\nxml \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把结果输出xml格式")]),t._v("\nannotate \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行一个python程序并收集运行数据")]),t._v("\nerase \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除之前coverage收集的数据")]),t._v("\ncombine \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并coverage收集的数据")]),t._v("\ndebug \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取调试信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("help")]),t._v(" \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看coverage帮助信息，coverage help 动作/coverage 动作 –help，查看指定动作的帮助信息。")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#### 可以通过–rcfile=FILE的方式指定命令运行时的配置文件。所有命令行的参数都可以写到配置文件里面。")]),t._v("\n")])])]),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("直接使用pip安装即可，安装完成后会在Python的scripts目录下出现一个coverage.py文件。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("pip install coverage\n")])])])])]),t._v(" "),a("p",[t._v("‍")]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("执行测试")]),t._v(" "),a("p",[t._v("会在目录下生成一个.covergae文件，即为测试记过。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("coverage run test.py\n# coverage run -p test.py # 不覆盖之前其他文件执行的结果\ncoverage run -m unittest discover dir/\t# 自动在目录下寻找单测实例并执行\n")])])])]),t._v(" "),a("li",[a("p",[t._v("生成简易报告")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("coverage report\n")])])])]),t._v(" "),a("li",[a("p",[t._v("生成HTML详细报告")]),t._v(" "),a("p",[t._v("my_coverage_result 用于自定义生成报告的目录名称，默认为htmlcov。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("coverage html # 目录使用默认名称\ncoverage html -d my_coverage_result\n")])])])]),t._v(" "),a("li",[a("p",[t._v("‍")])])]),t._v(" "),a("p",[t._v("‍")]),t._v(" "),a("h2",{attrs:{id:"注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[t._v("#")]),t._v(" 注意点")]),t._v(" "),a("ul",[a("li",[t._v("不是什么测试代码都能被Coverage统计出来的")])]),t._v(" "),a("p",[t._v("‍")])])}),[],!1,null,null,null);a.default=r.exports}}]);