(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{333:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"生成器底层运行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成器底层运行机制"}},[t._v("#")]),t._v(" 生成器底层运行机制")]),t._v(" "),s("h2",{attrs:{id:"生成器的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成器的创建"}},[t._v("#")]),t._v(" 生成器的创建")]),t._v(" "),s("p",[t._v("有如下生成器")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("co_process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'task with argument {} started'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n    data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'step one finished， got {} from caller'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n    data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'step two finished， got {} from caller'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n    data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'step three finished， got {} from caller'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("我们知道co_process是一个特殊的函数对象，调用其结果并不会立刻执行函数体，而是得到一个生成器对象：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" co_process\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("function co_process at "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x109768f80")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" genco "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" co_process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" genco\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("generator "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),t._v(" co_process at "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x109629450")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" genco"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class__\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'generator'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("尝试对"),s("code",[t._v('co_process("foo")')]),t._v("​进行反编译，发现其也是由统一的"),s("code",[t._v("CALL_FUNCTION")]),t._v("​函数调用字节码进行调用的，但是返回结果是一个生成器，应该是内部做了特殊处理：CALL_FUNCTION")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" dis\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" dis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"co_process('foo')\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exec'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" LOAD_NAME                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("co_process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" LOAD_CONST               "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" CALL_FUNCTION            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" POP_TOP\n              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" LOAD_CONST               "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" RETURN_VALUE\n")])])]),s("p",[t._v("一路寻找，可以发现其最终调用的是"),s("code",[t._v("_PyEval_EvalCodeWithName")]),t._v("​函数。")]),t._v(" "),s("p",[t._v("​"),s("code",[t._v("_PyEval_EvalCodeWithName")]),t._v("​函数先为目标函数 "),s("code",[t._v("co_process")]),t._v("​创建 "),s("strong",[t._v("栈帧")]),t._v(" 对象 f，然后检查代码对象标识。若代码对象带有 "),s("code",[t._v("CO_GENERATOR")]),t._v("​、"),s("code",[t._v("CO_COROUTINE")]),t._v("​或 "),s("code",[t._v("CO_ASYNC_GENERATOR")]),t._v("​标识，便创建生成器并返回：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Handle generator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("coroutine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("asynchronous generator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("co"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("co_flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CO_GENERATOR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CO_COROUTINE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CO_ASYNC_GENERATOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        PyObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        PyObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("coro_wrapper "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tstate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("coroutine_wrapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" is_coro "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" co"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("co_flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" CO_COROUTINE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 省略\n\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Create a new generator that owns the ready to run frame\n         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" that "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" the value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("is_coro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            gen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PyCoro_New"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qualname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("co"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("co_flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" CO_ASYNC_GENERATOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            gen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PyAsyncGen_New"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qualname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            gen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PyGen_NewWithQualName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qualname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" NULL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" NULL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 省略\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" gen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("代码对象标识 "),s("em",[t._v("co_flags")]),t._v(" 在编译时由语法规则确定，通过 "),s("em",[t._v("co_process")]),t._v(" ，我们可以找到其代码对象标识：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" co_process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__code__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("co_flags\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" co_process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__code__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("co_flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("\n")])])]),s("p",[t._v("研究代码可以注意到，用于保存"),s("code",[t._v("co_process")]),t._v("​函数执行上下文的栈帧对象f，被作为一个重要字段保存在生成器对象gen中。")]),t._v(" "),s("p",[t._v("与普通函数一样，当 co_process 被调用时，Python 将为其创建栈帧对象，用于维护函数执行上下文 —— "),s("strong",[t._v("代码对象")]),t._v(" 、 "),s("strong",[t._v("全局名字空间")]),t._v(" 、 "),s("strong",[t._v("局部名字空间")]),t._v(" 以及 "),s("strong",[t._v("运行栈")]),t._v(" 都在其中。")]),t._v(" "),s("p",[t._v("但不同的是，生成器的栈帧对象不会被接入调用链中，Python只会创建一个生成器对象并将其作为函数调用结果返回，在生成器对象的gi_frame字段中保存着真正的栈帧对象。")]),t._v(" "),s("blockquote",[s("p",[t._v("生成器对象底层由 PyGenObject 结构体表示，定义于 Include/genobject.h 头文件中。生成器类型对象同样由 PyTypeObject 结构体表示，全局只有一个，以全局变量的形式定义于 Objects/genobject.c 中，也就是 PyGen_Type 。")])]),t._v(" "),s("p",[t._v("PyGenObject 结构体中的字段也很好理解，顾名即可思义，这也体现了变量名的作用：")]),t._v(" "),s("ul",[s("li",[t._v("ob_refcnt ，"),s("strong",[t._v("引用计数")]),t._v(" ，这是任何对象都包含的公共字段；")]),t._v(" "),s("li",[t._v("ob_type ，"),s("strong",[t._v("对象类型")]),t._v(" ，指向其类型对象，这也是任何对象都包含的公共字段；")]),t._v(" "),s("li",[t._v("gi_frame ，生成器执行时所需的 "),s("strong",[t._v("栈帧对象")]),t._v(" ，用于保存执行上下文信息；")]),t._v(" "),s("li",[t._v("gi_running ，标识生成器是否运行中；")]),t._v(" "),s("li",[t._v("gi_code ，"),s("strong",[t._v("代码对象")]),t._v(" ；")]),t._v(" "),s("li",[t._v("gi_weakreflist ，弱引用相关，不深入讨论；")]),t._v(" "),s("li",[t._v("gi_name ，生成器名；")]),t._v(" "),s("li",[t._v("gi_qualname ，同上；")]),t._v(" "),s("li",[t._v("gi_exec_state ，生成器执行状态；")])]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20230220033215-9spvhn9.png",alt:"image"}}),t._v("​")]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("p",[t._v("从Python中访问生成器对象genco可以进一步印证上述结论：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成器创建后，尚未开始执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" genco"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gi_running\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 栈帧对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" genco"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gi_frame\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("frame at "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x110601c90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<stdin>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code co_process"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成器和栈帧的代码对象，均来自 co_process 函数对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" genco"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gi_code\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("code "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),t._v(" co_process at "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x11039c4b0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<stdin>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" genco"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gi_frame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("f_code\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("code "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),t._v(" co_process at "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x11039c4b0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<stdin>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" co_process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__code__\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("code "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),t._v(" co_process at "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x11039c4b0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<stdin>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"生成器的执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成器的执行"}},[t._v("#")]),t._v(" 生成器的执行")]),t._v(" "),s("p",[t._v("当"),s("code",[t._v("co_process")]),t._v("​函数被调用后，返回的是生成器"),s("code",[t._v("genco")]),t._v("​，函数体并未开始执行。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 栈帧对象 f_lasti 字段记录当前字节码执行进度，-1 表示尚未开始执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" genco"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gi_frame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("f_lasti\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("我们了解可以使用next内建函数或者send方法启动生成器，并驱动其不断执行，尝试从这两个函数入手搜索生成器执行的密码。")]),t._v(" "),s("p",[t._v("​"),s("code",[t._v("next")]),t._v("​函数定义于"),s("code",[t._v("Python/bltinmodule.c")]),t._v("​源文件-builtin_next。其关键之处只有一句，表明了其实质上是调用了生成器类型对象的"),s("code",[t._v("tp_iternext")]),t._v("​函数完成工作，即"),s("code",[t._v("next(genco)")]),t._v("​  等价于 "),s("code",[t._v("genco.__class__.__next__(genco)")]),t._v("​：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("it"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("ob_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("tp_iternext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("it"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 关键之处\n\n`"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("genco"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("`  等价于 `genco"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__next__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("genco"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("`\n")])])]),s("p",[t._v("​"),s("code",[t._v("gen_iternext")]),t._v("​函数定义于生成器类型对象PyGen_Type中-gen_iternext，其内部直接调用了"),s("code",[t._v("gen_send_ex")]),t._v("​函数-gen_send_ex。")]),t._v(" "),s("p",[t._v("另一方面，"),s("code",[t._v("genco.send")]),t._v("​也可以启动并驱动生成器的执行，根据 Objects/genobject.c 中的方法定义，它底层调用 _PyGen_Send 函数：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("static PyMethodDef gen_methods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"send"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PyCFunction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("_PyGen_Send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" METH_O"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" send_doc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"throw"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PyCFunction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("gen_throw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" METH_VARARGS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" throw_doc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"close"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PyCFunction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("gen_close"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" METH_NOARGS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" close_doc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("NULL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NULL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Sentinel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("因此不管 gen_iternext 函数还是 _PyGen_Send 函数，都是直接调用 gen_send_ex 函数完成工作的，next和send的等价性也源于此：")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20230220035459-dr031uv.png",alt:"image"}}),t._v("​")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("gen_send_ex")]),t._v("​函数中有两句关键的代码揭示了生成器的本质：")]),t._v(" "),s("ul",[s("li",[t._v("首先第一行代码将生成器栈帧挂到当前调用链上")]),t._v(" "),s("li",[t._v("然后第二行代码调用"),s("code",[t._v("PyEval_EvalFrameEx")]),t._v("​执行生成器栈帧")]),t._v(" "),s("li",[t._v("生成器栈帧对象保存着生成器执行上下文，其中 "),s("em",[t._v("f_lasti")]),t._v(" 字段跟踪生成器代码对象的执行进度。")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("    f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("f_back "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tstate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("frame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关键")]),t._v("\n\n    result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PyEval_EvalFrameEx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关键")]),t._v("\n")])])]),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20230220035859-fkc67mp.png",alt:"image"}}),t._v("​")]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"生成器的暂停"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成器的暂停"}},[t._v("#")]),t._v(" 生成器的暂停")]),t._v(" "),s("p",[t._v("我们了解生成器可以利用"),s("code",[t._v("yield")]),t._v("​语句将执行权归还给调用者，即生成器暂停执行的秘密就隐藏在"),s("code",[t._v("yield")]),t._v("​语句中，尝试对"),s("code",[t._v("yield")]),t._v("​语句进行编译：")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("co_process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'task with argument {} started'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n    data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module"}},[t._v("dis")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" dis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("co_process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data = yield 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" LOAD_CONST               "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" YIELD_VALUE\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" STORE_FAST               "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("​"),s("code",[t._v("LOAD_CONST")]),t._v("​首先从常量列表中加载出需要带给调用者的值-yield右边的值，并将其加载的运行栈栈顶。")]),t._v(" "),s("p",[t._v("然后YIELD_VALUE字节码的处理过程中，首先从栈顶弹出yield值作为"),s("code",[t._v("_PyEval_EvalFrameDefault")]),t._v("​函数返回值，然后利用goto语句跳出for循环。")]),t._v(" "),s("blockquote",[s("h2",{attrs:{id:"yield-value​"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yield-value​"}},[t._v("#")]),t._v(" "),s("code",[t._v("YIELD_VALUE")]),t._v("​")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TARGET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("YIELD_VALUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            retval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("POP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("co"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("co_flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" CO_ASYNC_GENERATOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                PyObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_PyAsyncGenValueWrapperNew")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("retval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Py_DECREF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("retval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    retval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                retval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("f_stacktop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stack_pointer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            why "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" WHY_YIELD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" fast_yield"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \n")])])])]),t._v(" "),s("p",[t._v("紧接着，_PyEval_EvalFrameDefault 函数将当前栈帧 (也就是生成器的栈帧) 从调用链中解开。注意到，yield 值被 _PyEval_EvalFrameDefault 函数返回，并最终被 send 方法或 next 函数返回给调用者。")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20230220041947-ppzwktj.png",alt:"image"}}),t._v("​")]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"生成器的恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成器的恢复"}},[t._v("#")]),t._v(" 生成器的恢复")]),t._v(" "),s("p",[t._v("当我们再次调用send方法时，生成器将恢复执行。我们直到，send方法被调用后，Python先把生成器栈帧对象挂到调用链，并最终调用"),s("code",[t._v("PyEval_EvalFrameEx")]),t._v("​函数逐条执行字节码。在这个过程中，send发送的数据会被放到生成器栈顶：")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20230220042303-5wcz3d3.png",alt:"image"}}),t._v("​")]),t._v(" "),s("p",[t._v("生成器执行进度被保存在 f_lasti 字段，生成器将从下一条字节码指令 STORE_FAST 继续执行。STORE_FAST 指令从栈顶取出 send 发来的数据，并保存到局部变量 data ：")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20230220042705-r0zqfnz.png",alt:"image"}}),t._v("​")]),t._v(" "),s("p",[t._v("再接着，生成器将按照正常的逻辑，有条不紊地执行，直到遇到下一个 yield 语句或者生成器函数返回。")]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("生成器函数编译后代码对象带有 CO_GENERATOR 标识；")]),t._v(" "),s("li",[t._v("如果函数代码对象带 CO_GENERATOR 标识，被调用时 Python 将创建生成器对象；")]),t._v(" "),s("li",[t._v("生成器创建的同时，Python 还创建一个栈帧对象，用于维护代码对象执行上下文；")]),t._v(" "),s("li",[t._v("调用 next/send 驱动生成器执行，Python 将生成器栈帧对象接入调用链，开始执行字节码；")]),t._v(" "),s("li",[t._v("执行到 yield 语句时，Python 将 yield 右边的值放入栈顶，并结束字节码执行循环，执行权回到上一个栈帧；")]),t._v(" "),s("li",[t._v("yield 值最终作为 next 函数或 send 方法的返回值，被调用者取得；")]),t._v(" "),s("li",[t._v("再次调用 next/send ，Python 重新将生成器栈帧对象接入调用链恢复执行，通过 send 发送的值被放在栈顶；")]),t._v(" "),s("li",[t._v("生成器函数重新启动后，从 YIELD_VALUE 后的字节码恢复执行，可从栈顶获得调用者发来的值；")]),t._v(" "),s("li",[t._v("代码执行权就这样在调用者和生成器间来回切换，而生成器栈顶被用来传值；")])]),t._v(" "),s("p",[t._v("‍")])])}),[],!1,null,null,null);s.default=e.exports}}]);