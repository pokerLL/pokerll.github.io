(window.webpackJsonp=window.webpackJsonp||[]).push([[264],{544:function(t,e,a){"use strict";a.r(e);var s=a(14),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"python-自省机制详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python-自省机制详解"}},[t._v("#")]),t._v(" Python 自省机制详解")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("python编程时光"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("‍")]),t._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("自省，在我们日常生活中，通常是自我反省的意思。")]),t._v(" "),e("p",[t._v("但在计算机编程中，自省并不是这个意思，它的英文单词是 introspection，表示的是自我检查的行为或能力。")]),t._v(" "),e("p",[t._v("它的内容包括")]),t._v(" "),e("ol",[e("li",[t._v("告诉别人，我是谁")]),t._v(" "),e("li",[t._v("告诉别人，我能做什么")])]),t._v(" "),e("p",[t._v("（有点面试的感觉了）")]),t._v(" "),e("p",[t._v("Python 是一门动态语言，有了自省，就能让程序在运行时能够获知对象的类型以及该对象下有哪些方法等。")]),t._v(" "),e("p",[t._v("‍")]),t._v(" "),e("h2",{attrs:{id:"学习-python-模块的入口¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习-python-模块的入口¶"}},[t._v("#")]),t._v(" 学习 Python 模块的入口"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#id1",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"help-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#help-¶"}},[t._v("#")]),t._v(" help()"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#help",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("在 console 模式下，输入 "),e("code",[t._v('<span class="pre">help()</span>')]),t._v("​ ，可以看到输出了一段帮助文档，教你如何使用这个 help，当你看到提示符变成了 "),e("code",[t._v('<span class="pre">help></span>')]),t._v("​ 时，这时候就进入了 help 模式。")]),t._v(" "),e("p",[t._v("​"),e("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20200606121047415-20231210121508-zofncou.png",alt:"image0"}}),t._v("​")]),t._v(" "),e("p",[t._v("此时你可以键入你想要了解的模块、语法等，help 告诉你如何使用。")]),t._v(" "),e("p",[t._v("比如我输入 keywords ，就可以看到 Python 里所有的关键字。再输入 modules 就可以查看 Python 中所有的内置模块。")]),t._v(" "),e("p",[t._v("​"),e("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20200606121544062-20231210121508-q89pig7.png",alt:"image1"}}),t._v("​")]),t._v(" "),e("p",[t._v("输入 modules + "),e("code",[t._v('<span class="pre">指定包名</span>')]),t._v("​，就可以查看这个包下有哪些模块")]),t._v(" "),e("p",[t._v("​"),e("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20200606121942898-20231210121508-3cv7ah8.png",alt:"image2"}}),t._v("​")]),t._v(" "),e("p",[t._v("如果你想学习某个包要如何使用，可以直接在 help 模式下输入 "),e("code",[t._v('<span class="pre">包名</span>')]),t._v("​，就像下面这样，我就可以获得一份 json 的帮助文档。")]),t._v(" "),e("p",[t._v("​"),e("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20200606122408522-20231210121508-kwvqpvq.png",alt:"image3"}}),t._v("​")]),t._v(" "),e("p",[t._v("如果你想学习某个关键字的用法，可以在 help 模式下直接键入 "),e("code",[t._v('<span class="pre">关键字</span>')]),t._v("​ 查询用法，比如我直接键入 "),e("code",[t._v('<span class="pre">for</span>')]),t._v("​ 。")]),t._v(" "),e("p",[t._v("​"),e("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20200606133933401-20231210121508-iwf2cl9.png",alt:"image4"}}),t._v("​")]),t._v(" "),e("p",[t._v("查完后，使用 quit 就可以退出 help 模式了。")]),t._v(" "),e("p",[t._v("​"),e("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20200606123145109-20231210121508-hvo1b7e.png",alt:"image5"}}),t._v("​")]),t._v(" "),e("p",[t._v("如果你觉得进入 help 模式太麻烦，可以在 console 模式下直接查询")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('>>> help("json")\n')])])]),e("h3",{attrs:{id:"dir-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dir-¶"}},[t._v("#")]),t._v(" dir()"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#dir",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("dir() 函数可能是 Python 自省机制中最著名的部分了。它返回传递给它的任何对象的属性名称经过排序的列表。如果不指定对象，则 dir() 返回当前作用域中的名称。让我们将 dir() 函数应用于 keyword 模块，并观察它揭示了什么：")]),t._v(" "),e("p",[t._v("​"),e("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20200606134519352-20231210121508-xacbztq.png",alt:"image6"}}),t._v("​")]),t._v(" "),e("p",[t._v("‍")]),t._v(" "),e("h2",{attrs:{id:"应用到实际开发中¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用到实际开发中¶"}},[t._v("#")]),t._v(" 应用到实际开发中"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#id2",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"type-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-¶"}},[t._v("#")]),t._v(" type()"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#type",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("type() 函数有助于我们确定对象是字符串还是整数，或是其它类型的对象。它通过返回类型对象来做到这一点，可以将这个类型对象与 types 模块中定义的类型相比较：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> type(42)\n<class 'int'>\n>>> type([])\n<class 'list'>\n")])])]),e("h3",{attrs:{id:"hasattr-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hasattr-¶"}},[t._v("#")]),t._v(" hasattr()"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#hasattr",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("使用 dir() 函数会返回一个对象的属性列表。")]),t._v(" "),e("p",[t._v("但是，有时我们只想测试一个或多个属性是否存在。如果对象具有我们正在考虑的属性，那么通常希望只检索该属性。这个任务可以由 hasattr() 来完成.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('>>> import json\n>>> hasattr(json, "dumps")\nTrue\n>>>\n')])])]),e("h3",{attrs:{id:"getattr-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getattr-¶"}},[t._v("#")]),t._v(" getattr()"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#getattr",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("使用 hasattr 获知了对象拥有某个属性后，可以搭配 getattr() 函数来获取其属性值。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> getattr(json, \"__path__\")\n['/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json']\n>>>\n")])])]),e("p",[t._v("使用 getattr 获取函数后，可以很方便地使用这个函数，比如下面这样，可以不再使写 json.dumps 这么字。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('>>> dumps = getattr(json, "dumps")\n>>> dumps({"name": "MING"})\n\'{"name": "MING"}\'\n>>>\n\n# 当然你还有更简单的方法\n>>> mydumps = json.dumps\n>>> mydumps({"name": "MING"})\n\'{"name": "MING"}\'\n')])])]),e("h3",{attrs:{id:"id-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#id-¶"}},[t._v("#")]),t._v(" id()"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#id",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("id()")]),t._v("  函数返回对象的唯一标识符，标识符是一个整数。")]),t._v(" "),e("blockquote",[e("p",[t._v("需要注意的是id的返回值仅保证在对象的生命周期内唯一，如果对象被销毁了而这块内存又被分配给另一个对象，就会出现id相同的情况，此外，cpython在内部会对一些不可变对象做缓存，也会出现id相同的情况。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('>>> a = "hello"\n>>> b = "world"\n>>>\n>>> id(a)\n4470767944\n>>> id(b)\n4499487408\n>>>\n')])])]),e("h3",{attrs:{id:"isinstance-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isinstance-¶"}},[t._v("#")]),t._v(" isinstance()"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#isinstance",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("使用 isinstance() 函数可以确定一个对象是否是某个特定类型或定制类的实例。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('>>> isinstance("python", str)\nTrue\n>>> isinstance(10, int)\nTrue\n>>> isinstance(False, bool)\nTrue\n')])])]),e("h3",{attrs:{id:"callable-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#callable-¶"}},[t._v("#")]),t._v(" callable()"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#callable",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("使用 callable 可以确定一个对象是否是可调用的，比如函数，类这些对象都是可以调用的对象。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('>>> callable("hello")\nFalse\n>>>\n>>> callable(str)\nTrue\n>>>\n')])])]),e("p",[t._v("‍")]),t._v(" "),e("h2",{attrs:{id:"模块-modules-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块-modules-¶"}},[t._v("#")]),t._v(" 模块（Modules）"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#modules",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"doc-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#doc-¶"}},[t._v("#")]),t._v(" __doc__"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#doc",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("使用 "),e("code",[t._v('<span class="pre">__doc__</span>')]),t._v("​ 这个魔法方法，可以查询该模块的文档，它输出的内容和 help() 一样。")]),t._v(" "),e("p",[t._v("​"),e("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20200606134858285-20231210121508-ruvu3bx.png",alt:"image7"}}),t._v("​")]),t._v(" "),e("h3",{attrs:{id:"name-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#name-¶"}},[t._v("#")]),t._v(" __name__"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#name",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("始终是定义时的模块名；即使你使用import .. as 为它取了别名，或是赋值给了另一个变量名。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> import json\n>>> json.__name__\n'json'\n>>>\n>>> import json as js\n>>> js.__name__\n'json'\n")])])]),e("h3",{attrs:{id:"file-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-¶"}},[t._v("#")]),t._v(" __file__"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#file",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("包含了该模块的文件路径。需要注意的是内建的模块没有这个属性，访问它会抛出异常！")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> import json\n>>> json.__file__\n'/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/json/__init__.py'\n")])])]),e("h3",{attrs:{id:"dict-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dict-¶"}},[t._v("#")]),t._v(" __dict__"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#dict",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("包含了模块里可用的属性名-属性的字典；也就是可以使用模块名.属性名访问的对象。")]),t._v(" "),e("p",[t._v("‍")]),t._v(" "),e("h2",{attrs:{id:"类-class-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类-class-¶"}},[t._v("#")]),t._v(" 类（Class）"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#class",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"doc-¶-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#doc-¶-2"}},[t._v("#")]),t._v(" __doc__"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#doc-1",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("文档字符串。如果类没有文档，这个值是None。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> class People:\n...     '''\n...     people class\n...     '''\n...\n>>> p = People()\n>>>\n>>> print(p.__doc__)\n\n    people class\n\n>>>\n")])])]),e("h3",{attrs:{id:"name-¶-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#name-¶-2"}},[t._v("#")]),t._v(" __name__"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#name-1",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("始终是定义时的类名。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> People.__name__\n'People'\n")])])]),e("h3",{attrs:{id:"dict-¶-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dict-¶-2"}},[t._v("#")]),t._v(" __dict__"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#dict-1",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("包含了类里可用的属性名-属性的字典；也就是可以使用类名.属性名访问的对象。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> People.__dict__\nmappingproxy({'__module__': '__main__', '__doc__': '\\n    people class\\n    ', '__dict__': <attribute '__dict__' of 'People' objects>, '__weakref__': <attribute '__weakref__' of 'People' objects>})\n")])])]),e("h3",{attrs:{id:"module-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#module-¶"}},[t._v("#")]),t._v(" __module__"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#module",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("包含该类的定义的模块名；需要注意，是字符串形式的模块名而不是模块对象。")]),t._v(" "),e("p",[t._v("由于我是在 交互式命令行的环境下，所以模块是 "),e("code",[t._v('<span class="pre">__main__</span>')]),t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> People.__module__\n'__main__'\n")])])]),e("p",[t._v("如果将上面的代码放入 demo.py，并且从 people 模块导入 People 类，其值就是 people 模块")]),t._v(" "),e("p",[t._v("​"),e("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20200905115039771-20231210121508-v9ikuxk.png",alt:"image8"}}),t._v("​")]),t._v(" "),e("h3",{attrs:{id:"bases-¶"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bases-¶"}},[t._v("#")]),t._v(" __bases__"),e("a",{attrs:{href:"https://pythontime.iswbm.com/en/latest/c01/c01_02.html#bases",title:"Permalink to this headline",target:"_blank",rel:"noopener noreferrer"}},[t._v("¶"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("直接父类对象的元组；但不包含继承树更上层的其他类，比如父类的父类。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> class People: pass\n...\n>>> class Teenager: pass\n...\n>>> class Student(Teenager): pass\n...\n>>> Student.__bases__\n(<class '__main__.Teenager'>,)\n>>>\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);