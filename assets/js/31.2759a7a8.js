(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{312:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"函数调用与虚拟机软件栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数调用与虚拟机软件栈"}},[t._v("#")]),t._v(" 函数调用与虚拟机软件栈")]),t._v(" "),s("h2",{attrs:{id:"准备代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备代码"}},[t._v("#")]),t._v(" 准备代码")]),t._v(" "),s("p",[t._v("准备文件geometry.py ：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# geometry.py")]),t._v("\npi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("circle_area")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cylinder_volume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" circle_area"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" h\n")])])]),s("p",[t._v("注意，文件中定义有两个函数，其中计算圆柱体体积的函数将调用计算圆面积的函数。")]),t._v(" "),s("p",[t._v("准备main.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# main.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" geometry "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" circle_area"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cylinder_volume\ncircle_area"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" import")]),t._v(" "),s("p",[t._v("开始讨论函数调用流程之前，我们先来看看从 geometry 模块导入相关函数后虚拟机内部的状态，即执行完下面第一行指令后的状态：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" geometry "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" circle_area"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cylinder_volume\n")])])]),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/5f0e622a00015ab216160686-20230219042948-z1stv7d.png",alt:"图片描述"}}),t._v("​")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("main")]),t._v(" 模块是 Python 启动后的执行入口，每个 Python 程序均从 "),s("strong",[t._v("main")]),t._v(" 开始执行；")])]),t._v(" "),s("li",[s("p",[t._v("geometry 是我们导入的模块，它有一个 "),s("strong",[t._v("dict")]),t._v(" 属性，指向模块属性空间；")])]),t._v(" "),s("li",[s("p",[t._v("​geometry 初始化后，属性空间里有一个浮点属性 pi 以及两个函数对象， circle_area 和 cylinder_colume ；")])]),t._v(" "),s("li",[s("p",[t._v("两个函数的 "),s("strong",[t._v("全局名字空间")]),t._v(" 与模块对象的 "),s("strong",[t._v("属性空间")]),t._v(" 是同一个 "),s("em",[t._v("dict")]),t._v(" 对象；")]),t._v(" "),s("blockquote",[s("p",[t._v("本质上是由于在在执行geometry code的frame中make的function - make出来的function和其出生所在的frame的globals保持一致")])])]),t._v(" "),s("li",[s("p",[t._v("两个函数都有一个 "),s("strong",[t._v("代码对象")]),t._v(" ，保存函数 "),s("strong",[t._v("字节码")]),t._v(" 以及 "),s("strong",[t._v("名字")]),t._v(" 、 "),s("strong",[t._v("常量")]),t._v(" 等静态上下文信息；")])])]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"函数调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数调用"}},[t._v("#")]),t._v(" 函数调用")]),t._v(" "),s("h3",{attrs:{id:"单层调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单层调用"}},[t._v("#")]),t._v(" 单层调用")]),t._v(" "),s("p",[t._v("当解释器执行到第二行即"),s("code",[t._v("circle_area(1.5)")]),t._v("​时，Python 创建栈帧对象作为执行环境，准备执行编译后的代码对象：")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/5f0e623b0001ea6b17101065-20230219042949-7l9rdgv.png",alt:"图片描述"}}),t._v("​")]),t._v(" "),s("p",[t._v("注意到，栈帧对象全局名字空间、局部名字空间均指向 "),s("strong",[t._v("main")]),t._v(" 模块的属性空间。 "),s("code",[t._v("circle_area(1.5)")]),t._v("​ 的语句中第一条字节码将名为 circle_area 的对象加载到栈顶-这是要调用的函数；第二条字节码将常量 1.5 加载到栈顶-这是准备传递给函数的变量。")]),t._v(" "),s("p",[t._v("执行这两个字节码后，虚拟机状态变为：")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/5f0e62440001202916941062-20230219042949-kxkyc27.png",alt:"图片描述"}}),t._v("​")]),t._v(" "),s("p",[t._v("接着是 CALL_FUNCTION 字节码，顾名思义，其正式完成调动函数的使命：")]),t._v(" "),s("p",[t._v("CALL_FUNCTION 先创建一个新栈帧对象，作为 circle_name 函数的执行环境。新栈帧对象通过 f_back 指针，指向前一个栈帧对象，形成一个调用链。栈帧对象从函数对象取得 "),s("strong",[t._v("代码")]),t._v(" 对象，以及执行函数时的全局名字空间：")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/5f0e624e0001554316971051-20230219042949-kbcg006.png",alt:"图片描述"}}),t._v("​")]),t._v(" "),s("blockquote",[s("p",[t._v("注意执行函数的栈帧对象 f_locals 字段为空，而不是跟 f_globals 一样指向一个 dict 对象。由于函数有多少局部变量是固定的，代码编译时就能确定。因此，没有必要用字典来实现局部名字空间，只需把局部变量依次编号，保存在栈底即可 ( r=1.5 处)。这样一来，通过编号即可快速存取局部变量，效率比字典更高。于此对应，有一个特殊的字节码 LOAD_"),s("strong",[t._v("FAST")]),t._v(" 用于加载局部变量，以操作数的编号为操作数。")])]),t._v(" "),s("p",[t._v("最后， RETURN_VALUE 字节码将结算结果返回给调用者，执行权现在交回调用者的 CALL_FUNCTION 字节码。CALL_FUNCTION 先将结果保存到栈顶并着手回收 circle_area 函数的栈帧对象。")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/5f0e62570001252416891017-20230219042949-76svgsq.png",alt:"图片描述"}}),t._v("​")]),t._v(" "),s("h3",{attrs:{id:"嵌套调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套调用"}},[t._v("#")]),t._v(" 嵌套调用")]),t._v(" "),s("p",[t._v("嵌套调用也是类似的，以  "),s("code",[t._v("cylinder_volume(1.5, 2)")]),t._v("​ 为例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" cylinder_volume"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14.13")]),t._v("\n")])])]),s("p",[t._v("Python 交互式终端同样先对这个语句进行编译，得到这样的字节码：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" LOAD_NAME                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cylinder_volume"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" LOAD_CONST               "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" LOAD_CONST               "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" CALL_FUNCTION            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" PRINT_EXPR\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" LOAD_CONST               "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" RETURN_VALUE\n")])])]),s("p",[t._v("然后， Python 虚拟机以 "),s("strong",[t._v("main")]),t._v(" 栈帧对象为环境，执行这段字节码。当虚拟机执行到 CALL_FUNCTION 这个字节码时，创建新栈帧对象，准备执行函数调用。初始新栈帧对象时，函数参数来源于当前栈顶，而全局名字空间与代码对象来源于被调用函数对象。新栈帧对象初始化完毕，虚拟机便跳到新栈帧，开始执行 cylinder_volume 的字节码。cylinder_volume 字节码中也有 CALL_FUNCTION 指令，调用 circle_area 函数。虚拟机依样画葫芦，为 circle_area 准备栈帧，并开始执行 circle_area 的字节码：")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/5f0e62600001d17817071061-20230219042948-rcv9m3f.png",alt:"图片描述"}}),t._v("​")]),t._v(" "),s("p",[t._v("这样一来，随着函数调用的深入，栈帧链逐渐伸长；随着函数执行完毕并返回，栈帧链逐渐收缩。维护栈帧链条的关键是栈帧对象的 f_back 指针，它总是指向上个一栈帧对象，也就是调用者的栈帧，如上图红色箭头。我们在调试程序时，可以查看完整的堆栈信息，也是 f_back 指针的功劳。")])])}),[],!1,null,null,null);s.default=n.exports}}]);