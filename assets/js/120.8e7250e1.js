(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{398:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tracemalloc-获取内存分配状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tracemalloc-获取内存分配状态"}},[t._v("#")]),t._v(" tracemalloc-获取内存分配状态")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("Python内置了"),s("code",[t._v("gc")]),t._v("​模块，通过"),s("code",[t._v("gc")]),t._v("​模块，我们可以以比较低级的方式获取程序的内存使用情况。但是"),s("code",[t._v("gc")]),t._v("​只能获取内存使用情况而无法获取更详细的信息：例如到底是哪行代码分配了这些对象。")]),t._v(" "),s("p",[t._v("Python3.4推出了新的内置模块用于解决这些需求-"),s("code",[t._v("tracemalloc")]),t._v("​，同事可以用于检测内存泄漏、性能瓶颈等问题。它可以记录 Python 程序中分配的所有内存块，并提供一些有用的 API 来分析内存分配情况。")]),t._v(" "),s("p",[t._v("​"),s("code",[t._v("tracemalloc")]),t._v("​ 模块主要有以下两个方法：")]),t._v(" "),s("ul",[s("li",[t._v("​"),s("code",[t._v("tracemalloc.start([nframe])")]),t._v("​：开始跟踪内存分配情况。参数 "),s("code",[t._v("nframe")]),t._v("​ 指定要记录的堆栈帧数，默认为 1。")]),t._v(" "),s("li",[t._v("​"),s("code",[t._v("tracemalloc.stop()")]),t._v("​：停止跟踪内存分配情况。")])]),t._v(" "),s("p",[t._v("此外，还有以下几个用于分析和显示内存分配情况的函数：")]),t._v(" "),s("ul",[s("li",[t._v("​"),s("code",[t._v("tracemalloc.get_traced_memory()")]),t._v("​：返回当前跟踪的内存分配情况，包括已分配和未释放的内存量。")]),t._v(" "),s("li",[t._v("​"),s("code",[t._v("tracemalloc.take_snapshot()")]),t._v("​：返回当前的内存快照，包括所有的内存块和堆栈信息。")]),t._v(" "),s("li",[t._v("​"),s("code",[t._v("snapshot.filter_traces(filters)")]),t._v("​：从快照中筛选出符合指定条件的内存块和堆栈信息。")]),t._v(" "),s("li",[t._v("​"),s("code",[t._v("snapshot.statistics([key_type])")]),t._v("​：返回快照中的内存分配统计信息，可以按照指定的键类型进行排序。")]),t._v(" "),s("li",[t._v("​"),s("code",[t._v("snapshot.traceback([index])")]),t._v("​：返回快照中指定索引处内存块的堆栈信息。")])]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[t._v("#")]),t._v(" 使用示例")]),t._v(" "),s("p",[t._v("在下面的示例中，我们首先调用 "),s("code",[t._v("tracemalloc.start()")]),t._v("​ 开始跟踪内存分配情况，然后执行一些代码，分配一些内存。接着，我们调用 "),s("code",[t._v("tracemalloc.get_traced_memory()")]),t._v("​ 获取当前内存使用量，并输出当前内存使用量和峰值内存使用量。最后，我们调用 "),s("code",[t._v("tracemalloc.take_snapshot()")]),t._v("​ 获取当前的内存快照，并使用 "),s("code",[t._v("statistics()")]),t._v("​ 方法输出内存分配统计信息。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tracemalloc\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开始跟踪内存分配情况")]),t._v("\ntracemalloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行一些代码，分配一些内存")]),t._v("\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),t._v("\nlst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取当前内存使用量")]),t._v("\ncurrent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" peak "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tracemalloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_traced_memory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Current memory usage: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' MB"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Peak memory usage: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("peak "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' MB"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取当前的内存快照并输出统计信息")]),t._v("\nsnapshot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tracemalloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("take_snapshot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntop_stats "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" snapshot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statistics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lineno'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[ Top 10 ]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" stat "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" top_stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\nCurrent memory usage: 4.403904914855957 MB\nPeak memory usage: 4.404065132141113 MB\n[ Top 10 ]\nc:/Workspace/Program/CPythonTest/PyTests/tracemalloc_test.py:8: size=3532 KiB, count=99744, average=36 B\nc:/Workspace/Program/CPythonTest/PyTests/tracemalloc_test.py:7: size=977 KiB, count=2, average=489 KiB\nc:/Workspace/Program/CPythonTest/PyTests/tracemalloc_test.py:12: size=72 B, count=1, average=72 B\nc:/Workspace/Program/CPythonTest/PyTests/tracemalloc_test.py:11: size=56 B, count=2, average=28 B\n"""')]),t._v("\n")])])]),s("p",[t._v("‍")])])}),[],!1,null,null,null);s.default=e.exports}}]);