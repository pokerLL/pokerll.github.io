(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{326:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"对象模型概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象模型概述"}},[t._v("#")]),t._v(" 对象模型概述")]),t._v(" "),s("h2",{attrs:{id:"一切皆对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一切皆对象"}},[t._v("#")]),t._v(" 一切皆对象")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Python中一切皆对象，因此变量实际只是一个指向对象的指针-CPython")]),t._v(" "),s("ul",[s("li",[t._v("对不可变对象进行修改操作时实际是先解绑原先的对象然后创建一个新的对象再绑定")])])]),t._v(" "),s("li",[s("p",[t._v("不区分基本类型和对象，所有基本类型均由对象实现")]),t._v(" "),s("ul",[s("li",[t._v("类型也由对象实现-Type类")]),t._v(" "),s("li",[t._v("可以简单分为类型对象和实例对象两个体系")])])]),t._v(" "),s("li",[s("p",[t._v("对象分为可变对象和不可变对象")])])]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"类型对象、实例对象体系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型对象、实例对象体系"}},[t._v("#")]),t._v(" 类型对象、实例对象体系")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("类型对象")]),t._v(" "),s("ul",[s("li",[t._v("类型对象也是对象，类型是Type，所有类型如Int、Float、自己用class关键字定义的类等都是Type类的实例，这些实例在程序中作为全局变量存在")]),t._v(" "),s("li",[t._v("Type类型的类型是自己-Type是所有类型的类型")]),t._v(" "),s("li",[t._v("类型对象中保存着对象的元数据，描述对象的类型、内存信息、支持的操作等 PyTypeObject")])])]),t._v(" "),s("li",[s("p",[t._v("实例对象")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("实例的类型就是类型对象")])]),t._v(" "),s("li",[s("p",[t._v("实例对象由类型对象进行创建")]),t._v(" "),s("ul",[s("li",[t._v("对于内建类型一般使用内置的CAPI直接创建，而不是走常见的new、init流程")]),t._v(" "),s("li",[t._v("对于自定义类型则一般通过类型对象进行创建")]),t._v(" "),s("li",[t._v("但实际上两者执行的逻辑是一致的")])])])])]),t._v(" "),s("li",[s("p",[t._v("obejct对象")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("所有对象的基类都是object-"),s("code",[t._v("__base__")]),t._v("​属性")]),t._v(" "),s("ul",[s("li",[t._v("type的基类也是object")]),t._v(" "),s("li",[t._v("object在初始化时不会设置"),s("code",[t._v("__base__")]),t._v("​属性-防止循环继承链")])])]),t._v(" "),s("li",[s("p",[t._v("object的类型是type，object没有基类-防止继承链死循环")])])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <class 'type'>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <class 'type'>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <class 'type'>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__bases__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (<class 'object'>,)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__bases__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (<class 'object'>,)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__bases__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ()")]),t._v("\n")])])]),s("p",[t._v("​​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20230329180056-9vqyeun.png",alt:"image"}}),t._v("​​")]),t._v(" "),s("p",[t._v("​"),s("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/image-20230207051630-nqff12p.png",alt:"image"}}),t._v("​")]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"对象生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象生命周期"}},[t._v("#")]),t._v(" 对象生命周期")]),t._v(" "),s("h3",{attrs:{id:"对象的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的创建"}},[t._v("#")]),t._v(" 对象的创建")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("首先明确以下两点")]),t._v(" "),s("ul",[s("li",[t._v("类型对象存储着类型的元信息")]),t._v(" "),s("li",[t._v("自定义的实例对象通过类型对象进行创建")])])]),t._v(" "),s("li",[s("p",[t._v("对象的创建")]),t._v(" "),s("ul",[s("li",[t._v("首先执行"),s("code",[t._v("type")]),t._v("​类型对象中的"),s("code",[t._v("tp_call")]),t._v("​函数")]),t._v(" "),s("li",[t._v("​"),s("code",[t._v("tp_call")]),t._v("​函数调用"),s("code",[t._v("_type")]),t._v("​的"),s("code",[t._v("type_new")]),t._v("​函数为实例对象分配内存空间")]),t._v(" "),s("li",[t._v("必要时"),s("code",[t._v("tp_call")]),t._v("​函数调用"),s("code",[t._v("_type")]),t._v("​的"),s("code",[t._v("type_init")]),t._v("​函数对实例对象进行初始化")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 例如float("3.14")')]),t._v("\nPyFloat_Type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ob_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tp_call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("PyFloat_Type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于")]),t._v("\nPyType_Type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tp_call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("PyFloat_Type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于-实际调用的是")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("PyFloat_Type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Objects/typeobject.c")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" PyObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PyTypeObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PyObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PyObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("kwds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    PyObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tp_new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kwds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 申请内存")]),t._v("\n    obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_Py_CheckFunctionResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PyObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Py_TYPE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("tp_init "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tp_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kwds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进行必要的初始化")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PyErr_Occurred")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Py_DECREF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PyErr_Occurred")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("‍")]),t._v(" "),s("h3",{attrs:{id:"对象的多态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的多态"}},[t._v("#")]),t._v(" 对象的多态")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("当对象完成创建后，Python内部统一通过"),s("code",[t._v("PyObject*")]),t._v("​类型来保存和维护这个对象")])]),t._v(" "),s("li",[s("p",[t._v("以此实现更抽象的上层逻辑而不关心对象的实际类型和实现细节-详见CAPI")]),t._v(" "),s("p",[t._v("例如假设有一个计算对象哈希值的函数接口：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("Py_hash_t PyObject_Hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PyObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    PyTypeObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Py_TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("tp_hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" NULL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("tp_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" To keep to the general practice that inheriting\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" solely "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" C code should work without\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" an explicit call to PyType_Ready"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" we implicitly call\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" PyType_Ready here "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" then check the tp_hash slot again\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("tp_dict "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" NULL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PyType_Ready"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("tp_hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" NULL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("tp_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Otherwise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" the "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),t._v(" can't be hashed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" PyObject_HashNotImplemented"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("‍")])])]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h3",{attrs:{id:"对象的行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的行为"}},[t._v("#")]),t._v(" 对象的行为")]),t._v(" "),s("h4",{attrs:{id:"标准操作集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准操作集"}},[t._v("#")]),t._v(" 标准操作集")]),t._v(" "),s("p",[t._v("对象的每个行为最终会落实到类型对象的一个函数指针之上。")]),t._v(" "),s("p",[t._v("可以以对象行为为依据，对对象进行分类：")]),t._v(" "),s("ol",[s("li",[t._v("数值型对象：int、float")]),t._v(" "),s("li",[t._v("序列型对象：str、bytes、tuple、list")]),t._v(" "),s("li",[t._v("关联性对象：dict")])]),t._v(" "),s("p",[t._v("Python以此为依据，为每个类别定义了一个标准操作集：")]),t._v(" "),s("ul",[s("li",[t._v("PyNumberMethods 结构体定义了 "),s("strong",[t._v("数值型")]),t._v(" 操作；")]),t._v(" "),s("li",[t._v("PySequenceMethods 结构体定义了 "),s("strong",[t._v("序列型")]),t._v(" 操作；")]),t._v(" "),s("li",[t._v("PyMappingMethods 结构体定义了 "),s("strong",[t._v("关联型")]),t._v(" 操作；")])]),t._v(" "),s("p",[t._v("只要类型对象提供了相关操作集，实例对象便具备相应的行为：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_typeobject")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    PyObject_VAR_HEAD\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* For printing, in format "<module>.<name>" */')]),t._v("\n    Py_ssize_t tp_basicsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tp_itemsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* For allocation */")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 标准操作集：Method suites for standard classes */")]),t._v("\n\n    PyNumberMethods "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp_as_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    PySequenceMethods "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp_as_sequence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    PyMappingMethods "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp_as_mapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Functions to access object as input/output buffer */")]),t._v("\n    PyBufferProcs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp_as_buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" PyTypeObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如float对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" PyNumberMethods float_as_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    float_add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* nb_add */")]),t._v("\n    float_sub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* nb_subtract */")]),t._v("\n    float_mul"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* nb_multiply */")]),t._v("\n    float_rem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* nb_remainder */")]),t._v("\n    float_divmod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* nb_divmod */")]),t._v("\n    float_pow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* nb_power */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nPyTypeObject PyFloat_Type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PyVarObject_HEAD_INIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("PyType_Type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"float"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PyFloatObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("float_as_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* tp_as_number */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* tp_as_sequence */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* tp_as_mapping */")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"引用计数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用计数"}},[t._v("#")]),t._v(" 引用计数")]),t._v(" "),s("ul",[s("li",[t._v("Python定义了宏"),s("code",[t._v("Py_INCREF(op)")]),t._v("​和"),s("code",[t._v("Py_DECREF(op)")]),t._v("​来维护对象引用计数-Py_INCREF&&Py_DECREF")]),t._v(" "),s("li",[t._v("同时Python 为一些常用对象维护了内存池， 对象回收后内存进入内存池中，以便下次使用，由此 "),s("strong",[t._v("避免频繁申请、释放内存")]),t._v(" 。")])]),t._v(" "),s("blockquote",[s("h2",{attrs:{id:"垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("python中一切皆对象，所有的变量本质上都是对象的一个指针。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Python中的自动化内存管理以引用计数为基础，同时以标记-清除和分代收集为辅。")])])]),t._v(" "),s("li",[s("p",[t._v("我们通过为对象设置"),s("strong",[t._v("引用计数")]),t._v("（指针数）判断对象被利用（计数为0则需要回收）。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("对象被创建、引用、作为参数传出、存入容器时引用计数+1")])]),t._v(" "),s("li",[s("p",[t._v("对象别名被显式销毁、别名被赋予新的对象，对象离开作用域、对象所在容器被销毁或对象被从容器中删除时引用计数-1")])]),t._v(" "),s("li",[s("p",[t._v("可以通过"),s("code",[t._v("sys")]),t._v("​模块的"),s("code",[t._v("getrefcount")]),t._v("​函数来获得对象的引用计数")]),t._v(" "),s("ul",[s("li",[t._v("对象作为函数参数传递时会将引用计数+1避免对象被提前销毁，在返回后再将引用技术-1。因此对象刚创建后"),s("code",[t._v("getrefcount")]),t._v("​得到的结果也是2。")])])]),t._v(" "),s("li",[s("p",[t._v("循环引用或者引用环的情况下，虽然引用计数不为0，但是仍然应该被回收，python垃圾会使机制能处理这一情况。可以显式调用 gc.collect() ，来启动垃圾回收。")])])])]),t._v(" "),s("li",[s("p",[t._v("引用计数是其中最简单的实现，不过这只是充分非必要条件，因为循环引用需要通过不可达判定，来确定是否可以回收，因为循环引用可能导致内存泄漏问题。")])]),t._v(" "),s("li",[s("p",[t._v("Python 使用"),s("strong",[t._v("标记清除（mark-sweep）")]),t._v(" 算法和"),s("strong",[t._v("分代收集")]),t._v("（generational），来启用"),s("strong",[t._v("针对循环引用")]),t._v("的自动垃圾回收和"),s("strong",[t._v("提高垃圾回收的效率")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("标记清除算法。对于一个有向图，如果从一个节点出发进行遍历，并标记其经过的所有节点；那么，在遍历结束后，所有没有被标记的节点，我们就称之为不可达节点。显而易见，不可达节点的存在是没有任何意义的，因此我们需要对它们进行垃圾回收。")]),t._v(" "),s("blockquote",[s("p",[t._v("为什么标记清除算法能解决循环引用问题：经过一次次垃圾回收，循环引用的环一定是不可达的。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://learn.lianglianglee.com/%E4%B8%93%E6%A0%8F/%E9%87%8D%E5%AD%A6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E5%AE%8C/27%20%20%E5%86%85%E5%AD%98%E5%9B%9E%E6%94%B6%E4%B8%8A%E7%AF%87%EF%BC%9A%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%86%85%E5%AD%98%E7%9A%84%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98%EF%BC%9F.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("learn.lianglianglee.com/..."),s("OutboundLink")],1)])])]),t._v(" "),s("li",[s("p",[t._v("分代收集算法。")]),t._v(" "),s("ol",[s("li",[t._v("在循环引用对象的回收中，整个应用程序会被暂停，为了减少应用程序暂停的时间，Python 通过分代回收（空间换时间）的方法提高垃圾回收效率。")]),t._v(" "),s("li",[t._v("分代收集基于的思想是，新生的对象更有可能被垃圾回收，而存活更久的对象也有更高的概率继续存活。")]),t._v(" "),s("li",[t._v("分代回收的基本思想是Python 将所有对象分为三代，从第0代到第2代扫描频率依次降低。刚刚创立的对象是第 0 代；经过一次垃圾回收后，依然存在的对象，便会依次从上一代挪到下一代。而每一代启动自动垃圾回收的阈值，则是可以单独指定的。当垃圾回收器中新增对象减去删除对象达到相应的阈值（一定数量）时，即新增对象的数量达到了一定值，就会对这一代对象启动垃圾回收。对象会在年龄达到一定程度后，被放到年龄较大的队列中，并且随着年龄的增大，它们被扫描的频率也会降低。这样，在大多数情况下，垃圾回收器只需要扫描年龄较小的对象，可以大大提高回收的效率。")])])])])])])]),t._v(" "),s("p",[t._v("‍")])])}),[],!1,null,null,null);s.default=e.exports}}]);