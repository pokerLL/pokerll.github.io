(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{316:function(t,a,s){"use strict";s.r(a);var r=s(14),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"capi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#capi"}},[t._v("#")]),t._v(" CAPI")]),t._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("CPython 是用 C 写成的，对外提供了 C API ，让用户可以从 C 环境中与其交互。 C API 分为两类： "),a("strong",[t._v("泛型 API")]),t._v(" 以及 "),a("strong",[t._v("特型 API")]),t._v(" 。")]),t._v(" "),a("h3",{attrs:{id:"泛型api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#泛型api"}},[t._v("#")]),t._v(" 泛型API")]),t._v(" "),a("p",[a("strong",[t._v("泛型 API")]),t._v(" 与类型无关，属于 "),a("strong",[t._v("抽象对象层")]),t._v(" ( Abstract Object Layer )，简称 AOL 。 这类 API 参数是 "),a("code",[t._v("PyObject*")]),t._v("​ ，可处理任意类型的对象， API 内部根据对象类型区别处理。")]),t._v(" "),a("p",[t._v("例如print函数：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[t._v("int PyObject_Print(PyObject *op, FILE *fp, int flags)\n")])])]),a("h3",{attrs:{id:"特型api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特型api"}},[t._v("#")]),t._v(" 特型API")]),t._v(" "),a("p",[a("strong",[t._v("特型 API")]),t._v(" 与类型相关，属于 "),a("strong",[t._v("具体对象层")]),t._v(" ( Concrete Object Layer )，简称 COL 。 这类 API 只能作用于某种类型的对象，例如浮点对象 PyFloatObject 。")]),t._v(" "),a("p",[t._v("Python 内部为每一种内置对象提供了这样一组 API ，例如：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[t._v("PyObject * PyFloat_FromDouble(double fval)\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);