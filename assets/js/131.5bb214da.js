(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{409:function(e,t,_){"use strict";_.r(t);var v=_(14),s=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"unittest概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unittest概述"}},[e._v("#")]),e._v(" unittest概述")]),e._v(" "),t("h2",{attrs:{id:"主要组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主要组件"}},[e._v("#")]),e._v(" 主要组件")]),e._v(" "),t("p",[e._v("​"),t("code",[e._v("unittest")]),e._v("​框架是python内置模块，只要用于组织和运行单元测试，其主要组件如下：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("​"),t("code",[e._v("TestCase")]),e._v("​")]),e._v(" "),t("ol",[t("li",[e._v("即测试用例，​"),t("code",[e._v("unittest")]),e._v("​中提供了一个基本类​"),t("code",[e._v("TestCase")]),e._v("​，可以用来创建新的测试用例")]),e._v(" "),t("li",[e._v("提供了一系列的"),t("code",[e._v("assert")]),e._v("​方法用来检查运行结果")])])]),e._v(" "),t("li",[t("p",[e._v("​"),t("code",[e._v("TestLoader")]),e._v("​")]),e._v(" "),t("ol",[t("li",[e._v("用于从包中提取"),t("code",[e._v("TestCase")]),e._v("​用例加入到"),t("code",[e._v("TestSuite")]),e._v("​中")]),e._v(" "),t("li",[e._v("有"),t("code",[e._v("loadTestsFromModule")]),e._v("​和"),t("code",[e._v("loadTestsFromTestCase")]),e._v("​等不同细粒度的收集方法")])])]),e._v(" "),t("li",[t("p",[e._v("​"),t("code",[e._v("TestSuite")]),e._v("​")]),e._v(" "),t("ol",[t("li",[e._v("​"),t("code",[e._v("TestSuite")]),e._v("​是"),t("code",[e._v("TestCase")]),e._v("​或"),t("code",[e._v("TestSuite")]),e._v("​的容器")]),e._v(" "),t("li",[e._v("​"),t("code",[e._v("TestSuite")]),e._v("​按照加入的顺序执行测试用例")])])]),e._v(" "),t("li",[t("p",[e._v("​"),t("code",[e._v("TestRunner")]),e._v("​")]),e._v(" "),t("ol",[t("li",[e._v("执行测试套件中的测试用例，并返回测试用例执行结果")])])]),e._v(" "),t("li",[t("p",[e._v("​"),t("code",[e._v("TextTestRunner")]),e._v("​")]),e._v(" "),t("ol",[t("li",[e._v("执行测试套件中的测试用例，并将测试结果用Text的形式进行展示")])])]),e._v(" "),t("li",[t("p",[e._v("​"),t("code",[e._v("TestResult")]),e._v("​")]),e._v(" "),t("ol",[t("li",[e._v("储存测试用例执行结果的基类")])])]),e._v(" "),t("li",[t("p",[e._v("​"),t("code",[e._v("TestFixture")]),e._v("​")]),e._v(" "),t("ol",[t("li",[e._v("测试夹具，用于测试用例环境的搭建和销毁，即用例测试前准备环境的搭建（SetUp前置条件），测试后环境的还原（TearDown后置条件）")]),e._v(" "),t("li",[e._v("有两种使用方式，一种是以测试方法为维度的"),t("code",[e._v("setUp()")]),e._v("​和"),t("code",[e._v("tearDown()")]),e._v("​，一种是以测试类为维度的"),t("code",[e._v("setUpClass()")]),e._v("​和"),t("code",[e._v("tearDownClass()")]),e._v("​")])])])]),e._v(" "),t("p",[e._v("执行流程为：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("写好TestCase")])]),e._v(" "),t("li",[t("p",[e._v("由TestLoader加载TestCase到TestSuite")])]),e._v(" "),t("li",[t("p",[e._v("由TextTestRunner来运行TestSuite，运行的结果保存在TextTestResult中，我们通过命令行或者unittest.main()执行时，main会调用TextTestRunner中的run来执行，或者我们可以直接通过TextTestRunner来执行用例。")]),e._v(" "),t("p",[e._v("在Runner执行时，默认将执行结果输出到控制台，我们可以设置其输出到文件，在文件中查看结果。")])])]),e._v(" "),t("p",[e._v("​"),t("img",{attrs:{src:"https://assets.b3logfile.com/siyuan/xxxxxx/assets/20161026164739484-20220831182942-e52xa6e",alt:"unittest类图"}}),e._v("​")]),e._v(" "),t("p",[e._v("‍")]),e._v(" "),t("h2",{attrs:{id:"单测编写流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单测编写流程"}},[e._v("#")]),e._v(" 单测编写流程")]),e._v(" "),t("ol",[t("li",[e._v("编写一个"),t("code",[e._v("python")]),e._v("​类，继承"),t("code",[e._v("TestCase")]),e._v("​类，即一个测试类")]),e._v(" "),t("li",[e._v("定义"),t("code",[e._v("setUp")]),e._v("​和"),t("code",[e._v("tearDown")]),e._v("​，如果定义了则会在每个测试case执行前先执行"),t("code",[e._v("setUp")]),e._v("​方法，执行完毕后执行"),t("code",[e._v("tearDown")]),e._v("​方法，主要是用作测试环境的船舰和销毁。")]),e._v(" "),t("li",[e._v("在测试类中编写以"),t("code",[e._v("test")]),e._v("​开头的测试方法（测试用例），unittest会自动将"),t("code",[e._v("test")]),e._v("​开头的方法放入测试用例集中。")]),e._v(" "),t("li",[e._v("执行"),t("code",[e._v("unittest.main()")]),e._v("​，该函数会负责运行测试，它会实例化所有"),t("code",[e._v("TestCase")]),e._v("​的子类，并运行其中所有以test打头的方法。")])]),e._v(" "),t("p",[e._v("‍")]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("​"),t("code",[e._v("unittest")]),e._v("​是"),t("code",[e._v("Python")]),e._v("​自带的单元测试框架，我们可以用其来作为我们自动化测试框架的用例组织执行框架。")])]),e._v(" "),t("li",[t("p",[e._v("​"),t("code",[e._v("unittest")]),e._v("​的流程：写好"),t("code",[e._v("TestCase")]),e._v("​，然后由TestLoader加载TestCase到TestSuite，然后由TextTestRunner来运行TestSuite，运行的结果保存在TextTestResult中，我们通过命令行或者unittest.main()执行时，main会调用TextTestRunner中的run来执行，或者我们可以直接通过TextTestRunner来执行用例。")])]),e._v(" "),t("li",[t("p",[e._v("一个class继承unittest.TestCase即是一个TestCase，其中以 "),t("code",[e._v("test")]),e._v(" 开头的方法在load时被加载为一个真正的TestCase。")])]),e._v(" "),t("li",[t("p",[e._v("​"),t("code",[e._v("verbosity")]),e._v("​参数可以控制执行结果的输出，"),t("code",[e._v("0")]),e._v("​ 是简单报告、"),t("code",[e._v("1")]),e._v("​ 是一般报告、"),t("code",[e._v("2")]),e._v("​ 是详细报告。")])]),e._v(" "),t("li",[t("p",[e._v("可以通过"),t("code",[e._v("addTest")]),e._v("​和"),t("code",[e._v("addTests")]),e._v("​向suite中添加case或suite，可以用TestLoader的loadTestsFrom__()方法。")])]),e._v(" "),t("li",[t("p",[e._v("用 "),t("code",[e._v("setUp()")]),e._v("、"),t("code",[e._v("tearDown()")]),e._v("、"),t("code",[e._v("setUpClass()")]),e._v("以及 "),t("code",[e._v("tearDownClass()")]),e._v("可以在用例执行前布置环境，以及在用例执行后清理环境")])]),e._v(" "),t("li",[t("p",[e._v("我们可以通过skip，skipIf，skipUnless装饰器跳过某个case，或者用TestCase.skipTest方法。")])]),e._v(" "),t("li",[t("p",[e._v("参数中加stream，可以将报告输出到文件：可以用TextTestRunner输出txt报告，以及可以用HTMLTestRunner输出html报告。")])]),e._v(" "),t("li",[t("p",[e._v("unittest是Python自带的单元测试框架，我们可以用其来作为我们自动化测试框架的用例组织执行框架。")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);