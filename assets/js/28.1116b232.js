(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{309:function(t,n,s){"use strict";s.r(n);var a=s(14),e=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"pycodeobj和pyframeobj"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pycodeobj和pyframeobj"}},[t._v("#")]),t._v(" PyCodeObj和PyFrameObj")]),t._v(" "),n("h2",{attrs:{id:"pycodeobj和pyframeobj-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pycodeobj和pyframeobj-2"}},[t._v("#")]),t._v(" PyCodeObj和PyFrameObj")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("pycodeobj 在编译时创建，是静态的。")])]),t._v(" "),n("li",[n("p",[t._v("pyframeobj 在运行时创建，是动态的。一个 pycodeobj 可以对应多个 pyframeobj，每个 pyframeobj 都有一个对应的 pycodeobj。")])]),t._v(" "),n("li",[n("p",[t._v("pycodeobj 主要存储静态信息，例如：")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_name            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对象名称")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_argcount        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参数个数（非函数一般为0）")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_code            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 字节码的序列化形式")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_consts          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用到的常量")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_names           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用到的名称")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_nlocals         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 局部变量个数")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_varnames        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 局部变量名称")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_flags           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译标志")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_filename        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件名")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_firstlineno     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 源代码第一行的行号")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_freevars        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自由变量（未在局部绑定的变量）")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_cellvars        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单元变量（局部作用域但在内嵌函数中使用的变量）-  即闭包变量")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_kwonlyargcount  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅关键字参数的数量")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_posonlyargcount "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅位置参数的数量")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_stacksize       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行栈大小")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_lnotab          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 行号表")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_linetable       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 行号表")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_positions       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 字节码中的位置")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_lines           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 源代码行号")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_qualname        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对象的限定名称")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" co_exceptiontable  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 异常表")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("pyframeobj 用来存储运行时信息，例如：")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_code             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关联的代码对象")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_back             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 调用此帧的帧 - 上一帧")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_builtins         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内置名称空间")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_globals          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局名称空间")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_locals           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 局部名称空间")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_lineno           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前行号")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_lasti            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最后执行的指令的索引")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_trace            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 跟踪函数")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_exc_type         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前异常类型")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_exc_value        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前异常值")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_exc_traceback    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前异常的追溯信息")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_restricted       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否为受限制的执行")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_stacktop         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 值栈的顶部")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_valuestack       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 值栈")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_blockstack       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 块栈")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f_localsplus       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 局部变量和其它局部变量存储 - 实际就是运行时的栈")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("‍")]),t._v(" "),n("h2",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("\"\"\" \n>>> text = open(\"./PyTests/codeobj_test1.py\", 'r').read()\n>>> text\n's = \"FFFFF\"\\n\\ndef func(x, y):\\n    if x == y:\\n        return 0\\n    return 1\\n\\nclass F:\\n    pass\\n\\nfunc()\\n\\n\\n'\n>>> code = compile(text, 'cbt', 'exec')\n>>> code\n<code object <module> at 0x7ff04eaa2d20, file \"cbt\", line 1>\ndef print_code(co):\n    print(f'co_name:\\t{co.co_name}')\n    for attr in dir(co):\n        if attr[0] != '_':\n            print(f'  {attr}:\\t{getattr(co,attr)}')\n... \n>>> \ndef dfs(co):\n    print_code(co)\n    for c in co.co_consts:\n        if isinstance(c, types.CodeType):\n            dfs(c)\n... \n>>> \n>>> import types\n>>> dfs(code)\nco_name:        <module>\n  co_argcount:  0\n  co_cellvars:  ()\n  co_code:      b'd\\x00Z\\x00d\\x01d\\x02\\x84\\x00Z\\x01G\\x00d\\x03d\\x04\\x84\\x00d\\x04\\x83\\x02Z\\x02e\\x01\\x83\\x00\\x01\\x00d\\x05S\\x00'\n  co_consts:    ('FFFFF', <code object func at 0x7ff04eaa2780, file \"cbt\", line 3>, 'func', <code object F at 0x7ff04eaa2c90, file \"cbt\", line 8>, 'F', None)\n  co_filename:  cbt\n  co_firstlineno:       1\n  co_flags:     64\n  co_freevars:  ()\n  co_kwonlyargcount:    0\n  co_lnotab:    b'\\x04\\x02\\x08\\x05\\x0e\\x03'\n  co_name:      <module>\n  co_names:     ('s', 'func', 'F')\n  co_nlocals:   0\n  co_stacksize: 3\n  co_varnames:  ()\nco_name:        func\n  co_argcount:  2\n  co_cellvars:  ()\n  co_code:      b'|\\x00|\\x01k\\x02r\\x0cd\\x01S\\x00d\\x02S\\x00'\n  co_consts:    (None, 0, 1)\n  co_filename:  cbt\n  co_firstlineno:       3\n  co_flags:     67\n  co_freevars:  ()\n  co_kwonlyargcount:    0\n  co_lnotab:    b'\\x00\\x01\\x08\\x01\\x04\\x01'\n  co_name:      func\n  co_names:     ()\n  co_nlocals:   2\n  co_stacksize: 2\n  co_varnames:  ('x', 'y')\nco_name:        F\n  co_argcount:  0\n  co_cellvars:  ()\n  co_code:      b'e\\x00Z\\x01d\\x00Z\\x02d\\x01S\\x00'\n  co_consts:    ('F', None)\n  co_filename:  cbt\n  co_firstlineno:       8\n  co_flags:     64\n  co_freevars:  ()\n  co_kwonlyargcount:    0\n  co_lnotab:    b'\\x08\\x01'\n  co_name:      F\n  co_names:     ('__name__', '__module__', '__qualname__')\n  co_nlocals:   0\n  co_stacksize: 1\n  co_varnames:  ()\n\"\"\"")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);