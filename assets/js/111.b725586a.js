(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{389:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"doctest-文档测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doctest-文档测试"}},[t._v("#")]),t._v(" doctest-文档测试")]),t._v(" "),s("h2",{attrs:{id:"doctest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doctest"}},[t._v("#")]),t._v(" doctest")]),t._v(" "),s("p",[t._v("Python的doctest模块是一个用于编写文档测试的工具，允许将交互式控制台下的测试嵌入到文档字符串中，并自动运行这些示例进行测试。doctest可以帮助你验证代码是否按照预期工作，并且还能作为文档的一部分提供使用示例和说明。")]),t._v(" "),s("p",[t._v("以下是doctest的一些主要特点和用法：")]),t._v(" "),s("ol",[s("li",[t._v("编写测试：在函数、类或模块的文档字符串中，你可以使用特殊的注释格式编写测试案例。测试案例通常采用交互式的方式，包括输入和期望输出的结果。例如：")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    返回两个数的和\n\n    示例：\n    >>> add(2, 3)\n    5\n    >>> add(-1, 5)\n    4\n    """')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("运行测试：通过运行"),s("code",[t._v("doctest.testmod()")]),t._v("​函数来执行文档字符串中的测试。doctest会自动提取文档字符串中的测试案例，并与实际结果进行比较。如果测试失败，doctest将会报告错误消息。")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" doctest\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    doctest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("testmod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("输出结果：当运行doctest时，会输出每个测试案例的结果。如果所有测试都通过，将没有任何输出；如果有测试失败，会显示错误信息。")]),t._v(" "),s("li",[t._v("集成到文档：doctest支持集成到Python的标准文档工具（如Sphinx）中，这样测试结果将与文档一起生成。这使得代码示例可以作为文档的一部分，并且可以确保示例的正确性。")]),t._v(" "),s("li",[t._v("丰富的功能：doctest还支持一些高级功能，例如使用ELLIPSIS来模糊输出、使用SKIP来跳过某些测试、使用NORMALIZE_WHITESPACE来规范化空格等。")])]),t._v(" "),s("p",[t._v("doctest是一个简单而有用的工具，能够提供快速的测试反馈和文档示例的验证。然而，它并不适合进行复杂的测试，对于大型项目或需要更高级功能的测试场景，可以考虑使用其他测试框架，如unittest或pytest。")]),t._v(" "),s("p",[t._v("‍")])])}),[],!1,null,null,null);s.default=e.exports}}]);