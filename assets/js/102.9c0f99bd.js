(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{380:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"urllib"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#urllib"}},[t._v("#")]),t._v(" urllib")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("​"),s("code",[t._v("urllib")]),t._v("​ 是 Python 标准库中的一个模块，用于处理 URL 相关的操作。它提供了一组功能，用于从网络上获取数据、处理 URL、发送 HTTP 请求以及其他与网络通信相关的任务。"),s("code",[t._v("urllib")]),t._v("​ 包括多个子模块，包括 "),s("code",[t._v("urllib.request")]),t._v("​、"),s("code",[t._v("urllib.parse")]),t._v("​、"),s("code",[t._v("urllib.error")]),t._v("​ 和 "),s("code",[t._v("urllib.robotparser")]),t._v("​，每个子模块都有不同的用途。")]),t._v(" "),s("p",[t._v("以下是 "),s("code",[t._v("urllib")]),t._v("​ 主要子模块的简要介绍：")]),t._v(" "),s("ol",[s("li",[t._v("​"),s("code",[t._v("urllib.request")]),t._v("​: 这个子模块提供了用于发送 HTTP 请求的工具。您可以使用它来打开 URL、下载远程文件、发送 GET 或 POST 请求等。常用的函数包括 "),s("code",[t._v("urlopen()")]),t._v("​ 用于打开 URL，以及 "),s("code",[t._v("urlretrieve()")]),t._v("​ 用于下载文件。")]),t._v(" "),s("li",[t._v("​"),s("code",[t._v("urllib.parse")]),t._v("​: 这个子模块用于解析 URL，并处理 URL 的各个部分，如协议、主机名、路径、查询参数等。它提供了 "),s("code",[t._v("urlparse()")]),t._v("​ 用于解析 URL，以及 "),s("code",[t._v("urlencode()")]),t._v("​ 用于编码查询参数等功能。")]),t._v(" "),s("li",[t._v("​"),s("code",[t._v("urllib.error")]),t._v("​: 当发生与 URL 相关的错误时，这个子模块提供了一些异常类，例如 "),s("code",[t._v("URLError")]),t._v("​ 和 "),s("code",[t._v("HTTPError")]),t._v("​，用于处理异常情况。")]),t._v(" "),s("li",[t._v("​"),s("code",[t._v("urllib.robotparser")]),t._v("​: 用于处理 "),s("code",[t._v("robots.txt")]),t._v("​ 文件的解析和分析，以确定哪些页面可以被爬取。")])]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"示例-url编码解码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-url编码解码"}},[t._v("#")]),t._v(" 示例-url编码解码")]),t._v(" "),s("blockquote",[s("p",[t._v("在 URL 中，某些字符会被转义以确保 URL 的正确性和可用性。以下是一些常见需要被转义的字符：")]),t._v(" "),s("ol",[s("li",[t._v('空格：空格通常被转义为 "%20" 或加号 "+"。')]),t._v(" "),s("li",[t._v('特殊字符：特殊字符如 "&"、"?"、"="、"#" 等都需要被转义。')]),t._v(" "),s("li",[t._v('非ASCII字符：非ASCII字符（如汉字、日文、俄文等字符）通常以 UTF-8 编码转义为一系列 "%xx" 形式的字符，其中 "xx" 是字符的十六进制表示。')]),t._v(" "),s("li",[t._v('控制字符：ASCII 控制字符通常会被转义为 "%xx" 形式的字符。')]),t._v(" "),s("li",[t._v("其他字符：根据需要，一些其他字符也可能需要被转义。")])]),t._v(" "),s("p",[t._v('例如，空格会被转义为 "%20"，而 "&" 会被转义为 "%26"。这样做是为了确保 URL 可以正确地传递和解释，因为某些字符在 URL 中具有特殊含义。')])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" urllib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" quote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unquote\n\noriginal_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com/l?type=1&kw=深圳&start_time=2023:05:01"')]),t._v("\nencoded_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("original_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndecoded_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" unquote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("encoded_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"原始字符串:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" original_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"编码后的字符串:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoded_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"解码后的字符串:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decoded_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n原始字符串: http://www.baidu.com/l?type=1&kw=深圳&start_time=2023:05:01\n编码后的字符串: http%3A//www.baidu.com/l%3Ftype%3D1%26kw%3D%E6%B7%B1%E5%9C%B3%26start_time%3D2023%3A05%3A01\n解码后的字符串: http://www.baidu.com/l?type=1&kw=深圳&start_time=2023:05:01\n"""')]),t._v("\n")])])]),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"示例-解析并更新query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-解析并更新query"}},[t._v("#")]),t._v(" 示例-解析并更新query")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" urllib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" urlparse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" urlencode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parse_qs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" urlunparse\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update_url_params")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将URL解析为其组成部分")]),t._v("\n    url_parts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" urlparse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    # 解析 URL\n    parsed_url = urlparse(url)\n\n    # 提取不同部分\n    scheme = parsed_url.scheme  # 协议（例如：https）\n    netloc = parsed_url.netloc  # 域名（例如：www.example.com）\n    path = parsed_url.path      # 路径（例如：/path/to/page）\n    query = parsed_url.query    # 查询参数部分（例如：param1=value1&param2=value2）\n    """')]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取URL中的查询参数")]),t._v("\n    query_params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parse_qs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url_parts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新参数字典")]),t._v("\n    query_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将参数字典转换为URL编码的字符串")]),t._v("\n    encoded_params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" urlencode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" doseq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建更新后的URL组成部分")]),t._v("\n    modified_url_parts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url_parts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    modified_url_parts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" encoded_params\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构造最终的URL")]),t._v("\n    modified_url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" urlunparse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modified_url_parts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" modified_url\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    base_url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com/l?type=1&kw=%E6%B1%9F%E8%8B%8F&start_time=2023%3A04%3A15"')]),t._v("\n\n    params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kw"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上海"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start_time"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2023:05:01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    updated_url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update_url_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updated_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("\"\"\"\n(test) lei@leideMacBook-Pro test % /Users/lei/miniconda3/envs/test/bin/python /Users/lei/workspace/program/test/test.py\n{'type': ['1'], 'kw': ['江苏'], 'start_time': ['2023:04:15']}\n{'type': ['1'], 'kw': '上海', 'start_time': '2023:05:01'}\nhttp://www.baidu.com/l?type=1&kw=%E4%B8%8A%E6%B5%B7&start_time=2023%3A05%3A01\n\"\"\"")]),t._v("\n")])])]),s("p",[t._v("‍")]),t._v(" "),s("h2",{attrs:{id:"示例-发送get请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-发送get请求"}},[t._v("#")]),t._v(" 示例 - 发送get请求")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send_request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"http://localhost:8080')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("fp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"正在测试: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    encoded_url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" urllib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("quote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" safe"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/:'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    headers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User-Agent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Accept'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Accept-Language'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'en-US,en;q=0.5'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    req "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" urllib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("encoded_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" urllib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("urlopen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            status_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getcode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# print(f"响应状态码：{status_code}")')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" status_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" urllib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("URLError "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"请求发生异常: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);